// <auto-generated />
using System;
using AccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TarjetasCuentasAPI.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20241107001932_campoDireccioncliente")]
    partial class campoDireccioncliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Modelos.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "William Johnson"
                        });
                });

            modelBuilder.Entity("Modelos.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Moneda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = "ACTIVA",
                            IdCliente = 1,
                            Moneda = "CRC",
                            NumeroDeCuenta = "1234567890",
                            Tipo = "AHO"
                        },
                        new
                        {
                            Id = 2,
                            Estado = "ACTIVA",
                            IdCliente = 1,
                            Moneda = "CRC",
                            NumeroDeCuenta = "0987654321",
                            Tipo = "AHO"
                        },
                        new
                        {
                            Id = 3,
                            Estado = "ACTIVA",
                            IdCliente = 2,
                            Moneda = "CRC",
                            NumeroDeCuenta = "1122334455",
                            Tipo = "AHO"
                        },
                        new
                        {
                            Id = 4,
                            Estado = "ACTIVA",
                            IdCliente = 3,
                            Moneda = "CRC",
                            NumeroDeCuenta = "5544332211",
                            Tipo = "AHO"
                        },
                        new
                        {
                            Id = 5,
                            Estado = "ACTIVA",
                            IdCliente = 3,
                            Moneda = "CRC",
                            NumeroDeCuenta = "6677889900",
                            Tipo = "AHO"
                        });
                });

            modelBuilder.Entity("Modelos.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Emisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Tarjetas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Emisor = "VISA",
                            Estado = "ACTIVA",
                            FechaVencimiento = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 1,
                            Numero = "4111111111111111"
                        },
                        new
                        {
                            Id = 2,
                            Emisor = "VISA",
                            Estado = "ACTIVA",
                            FechaVencimiento = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 1,
                            Numero = "4222222222222222"
                        },
                        new
                        {
                            Id = 3,
                            Emisor = "VISA",
                            Estado = "ACTIVA",
                            FechaVencimiento = new DateTime(2023, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 2,
                            Numero = "4333333333333333"
                        },
                        new
                        {
                            Id = 4,
                            Emisor = "VISA",
                            Estado = "ACTIVA",
                            FechaVencimiento = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 2,
                            Numero = "4444444444444444"
                        },
                        new
                        {
                            Id = 5,
                            Emisor = "VISA",
                            Estado = "ACTIVA",
                            FechaVencimiento = new DateTime(2026, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 3,
                            Numero = "4555555555555555"
                        });
                });

            modelBuilder.Entity("Modelos.Cuenta", b =>
                {
                    b.HasOne("Modelos.Cliente", "Cliente")
                        .WithMany("Cuentas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelos.Tarjeta", b =>
                {
                    b.HasOne("Modelos.Cliente", "Cliente")
                        .WithMany("Tarjetas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelos.Cliente", b =>
                {
                    b.Navigation("Cuentas");

                    b.Navigation("Tarjetas");
                });
#pragma warning restore 612, 618
        }
    }
}
